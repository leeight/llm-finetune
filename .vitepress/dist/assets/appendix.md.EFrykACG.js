import{_ as i,c as a,o as l,ag as t}from"./chunks/framework.C1nslR49.js";const F=JSON.parse('{"title":"附录","description":"","frontmatter":{},"headers":[],"relativePath":"appendix.md","filePath":"appendix.md"}'),p={name:"appendix.md"};function n(e,s,h,d,o,k){return l(),a("div",null,s[0]||(s[0]=[t(`<h1 id="附录" tabindex="-1">附录 <a class="header-anchor" href="#附录" aria-label="Permalink to &quot;附录&quot;">​</a></h1><h2 id="python-环境安装" tabindex="-1">Python 环境安装 <a class="header-anchor" href="#python-环境安装" aria-label="Permalink to &quot;Python 环境安装&quot;">​</a></h2><p>访问 <a href="https://www.python.org/" target="_blank" rel="noreferrer">https://www.python.org/</a> 站点下载对应系统的安装包，注意 Python 版本最好是 3.10 到 3.12 之间，因为许多深度学习库还不支持 3.13 以上版本，因此本书建议目前使用 Python 3.12 版本。</p><p>安装 Python 之后，为了提升下载速度，建议设置国内源，使用如下命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --upgrade</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> global.index-url</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple</span></span></code></pre></div><p>这里使用清华的源，除此之外还可以使用阿里的 <a href="https://mirrors.aliyun.com/pypi/simple/" target="_blank" rel="noreferrer">https://mirrors.aliyun.com/pypi/simple/</a> 等源。</p><p>如果是 Windows 系统，本书建议使用 WSL，使用 WSL 有两方面好处：</p><ol><li>操作和 Ubuntu 系统一致，后续在服务器中使用时的操作体验是一样的。</li><li>许多大模型相关的库只支持 Ubuntu，比如 Triton 和 vLLM。</li></ol><p>接下来介绍 WSL 中的环境安装方法。</p><ol><li><p>安装 WSL</p><ol><li>打开控制台，运行 <code>wsl.exe --install</code> 和 <code>wsl.exe --update</code> 命令。</li><li>安装 CUDA 的 WSL 2 版本。</li></ol></li><li><p>使用 <code>wsl.exe</code> 命令进入系统。</p><ol><li>运行 <code>sudo apt-key del 7fa2af80</code> 删除旧的 GPG，以避免出错。</li><li>按顺序运行如下命令（这些命令可以在 CUDA Toolkit Downloads 页面找到）：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://developer.download.nvidia.com/compute/cuda/repos/wsl-ubuntu/x86_64/cuda-wsl-ubuntu.pin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cuda-wsl-ubuntu.pin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apt/preferences.d/cuda-repository-pin-600</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://developer.download.nvidia.com/compute/cuda/12.6.3/local_installers/cuda-repo-wsl-ubuntu-12-6-local_12.6.3-1_amd64.deb</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cuda-repo-wsl-ubuntu-12-6-local_12.6.3-1_amd64.deb</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/cuda-repo-wsl-ubuntu-12-6-local/cuda-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-keyring.gpg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/keyrings/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cuda-toolkit-12-6</span></span></code></pre></div></li><li><p>安装 Python</p><ol><li>使用 <code>sudo apt install python3</code> 命令安装 Python。</li><li>使用 <code>sudo apt install python3-pip</code> 命令安装 pip。</li></ol></li><li><p>创建环境</p><ol><li>使用 <code>python -m venv ~/llm</code> 命令创建一个新环境。</li><li>使用 <code>. ~/llm/bin/activate</code> 激活这个环境，建议将这个命令放入 <code>.bashrc</code> 文件中，以便每次自动激活。</li></ol></li></ol><p>在 WSL 中访问本地目录，可以使用 <code>/mnt/e/</code> 这样的路径来访问系统中的 E 盘。</p>`,11)]))}const c=i(p,[["render",n]]);export{F as __pageData,c as default};
